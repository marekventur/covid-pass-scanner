{"version":3,"sources":["result.js","input-button.js","App.js","use-qr-scanner.js","reportWebVitals.js","index.js"],"names":["getPropertiesByRef","ref","dccSchema","split","properties","toJson","data","result","forEach","value","key","Array","map","Map","makeHumanReadable","schema","keySchema","title","description","items","e","Result","parsedData","useMemo","stringData","slice","base45decodedData","base45","decode","uncompressedData","pako","inflate","tags","payload","decodedPayload","useMaps","schemaData","get","code","issuer","expiry","Date","generated","humanReadable","console","error","Error","parseData","hasChanged","duration","lastData","useRef","useState","setHasChanged","asJson","JSON","stringify","useEffect","current","id","setTimeout","clearTimeout","useChangeDetection","className","ResultData","showDetails","setShowDetails","currentDose","v","dn","totalDoses","sd","administeredTimestamp","dt","daysAgo","Math","floor","now","isValid","isFullyProtected","onClick","nam","gn","fn","dob","toISOString","ResultError","InputTextButton","children","onValue","visible","setVisible","setValue","inputRef","onConfirm","blur","onChange","target","onBlur","onKeyPress","charCode","placeholder","focus","InputFileButton","type","file","files","reader","FileReader","readAsDataURL","onload","evt","onerror","click","App","showMore","setShowMore","setData","previewRef","onError","onData","previewElement","setPreviewElement","undefined","BrowserQRCodeReader","decodeFromConstraints","video","facingMode","controls","text","then","r","stop","useQrScanner","icon","faPaste","url","decodeFromImageUrl","d","faUpload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e9365a8.chunk.js","sourcesContent":["import { useMemo, useState, useRef, useEffect } from \"react\";\nimport base45 from \"base45\";\nimport pako from \"pako\";\nimport { decode } from \"cborg\";\nimport dccSchema from \"./dcc-schema.json\";\n\nconst getPropertiesByRef = ref => \n  dccSchema[\"$defs\"][ref.split(\"/\")[2]].properties;\n\nconst toJson = data => {\n  const result = {};\n  data.forEach((value, key) => {   \n    if (value instanceof Array) {\n      result[key] = value.map(toJson);\n    } else if (value instanceof Map) {\n      result[key] = toJson(value);\n    } else {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nconst makeHumanReadable = (data, schema) => {\n  const result = {};\n  data.forEach((value, key) => {   \n    const keySchema = schema[key];\n    if (!keySchema) {\n      result[key] = value;\n      return;\n    }\n    const title = keySchema.title ?? keySchema.description;\n    if (value instanceof Array) {\n      const properties = getPropertiesByRef(keySchema.items[\"$ref\"]);\n      result[title] = value.map(e => makeHumanReadable(e, properties))\n    } else if (value instanceof Map) {\n      result[title] = makeHumanReadable(value, getPropertiesByRef(keySchema[\"$ref\"]));\n    } else {\n      result[title] = value;\n    } \n  });\n  return result;\n}\n\nconst useChangeDetection = (data, duration) => {\n  const lastData = useRef(null);\n  const [hasChanged, setHasChanged] = useState(false);\n  const asJson = JSON.stringify(data);\n\n  useEffect(() => {\n    if (asJson !== lastData.current) {\n      lastData.current = asJson;\n      setHasChanged(true);\n      const id = setTimeout(() => setHasChanged(false), duration);\n      return () => clearTimeout(id);\n    }\n    return () => {}\n  }, [asJson, duration])\n  \n  return hasChanged;\n}\n\nconst parseData = (data) => {\n  \n  if (!data) {\n    return null;\n  }\n  try {\n    const stringData = data.slice(4);\n    const base45decodedData = base45.decode(stringData);\n    const uncompressedData = pako.inflate(base45decodedData);\n    \n    const tags = { 18: data => data };\n\n    /* eslint-disable no-unused-vars */\n    const [ headers1, headers2, payload, ignoreSignature ] = decode(uncompressedData, { tags });\n    /* eslint-enable no-unused-vars */\n\n    // todo: verify signature\n    const decodedPayload = decode(payload, {useMaps: true});\n    const schemaData = decodedPayload.get(-260).get(1);\n    return {\n      code: {\n        issuer: decodedPayload.get(1),\n        expiry: new Date(decodedPayload.get(4) * 1000),\n        generated: new Date(decodedPayload.get(6) * 1000),\n      },\n      humanReadable: makeHumanReadable(schemaData, dccSchema.properties),\n      data: toJson(schemaData),\n    }\n  } catch (e) {\n    console.error(e);\n    return new Error(e);\n  }\n}\n\nexport const Result = ({\n  data\n}) => {\n  const parsedData = useMemo(() => parseData(data), [data]);\n  const hasChanged = useChangeDetection(parsedData?.data, 1000);\n  if (!parsedData) {\n    return null;\n  }\n  \n  return <div className={`result ${hasChanged ? \"result--has-changed\" : \"\"}`}>\n    {(parsedData instanceof Error) \n      ? <ResultError error={parsedData} />\n      : <ResultData {...parsedData} />\n    }\n  </div>\n}\n\nconst ResultData = ({ data, humanReadable, code }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const currentDose = data.v?.[0]?.dn;\n  const totalDoses = data.v?.[0]?.sd;\n  const administeredTimestamp = new Date(data.v?.[0]?.dt);\n  const daysAgo = Math.floor((Date.now() - administeredTimestamp) / 1000 / 60 / 60 / 24);\n  const isValid = Date.now() < code.expiry;\n  const isFullyProtected = currentDose === totalDoses && daysAgo > 14;\n  return <>\n    <button className=\"show-details\" onClick={() => setShowDetails(!showDetails)}>{showDetails ? \"Less details\" : \"More details\"}</button>\n    {!showDetails && <dl>\n      <dt>Name</dt>\n      <dd>{data.nam?.gn} {data.nam?.fn}</dd>\n\n      <dt>DoB</dt>\n      <dd>{data.dob}</dd>\n\n      <dt>Vaccine</dt>\n      <dd className={isFullyProtected ? \"key--ok\": \"key--bad\"}>{currentDose} / {totalDoses} ({daysAgo} days ago)</dd>\n\n      <dt>Country</dt>\n      <dd>{code.issuer}</dd>\n\n      <dt>Code expiration</dt>\n      <dd className={isValid ? \"key--ok\": \"key--bad\"}>{code.expiry.toISOString().slice(0, 10)}</dd>\n    </dl>}\n    {showDetails && <pre className=\"details\">\n      {JSON.stringify(humanReadable, null, 2)}\n    </pre>}\n  </>\n}\n\nconst ResultError = () => {\n  return <div className=\"error\">Invalid code</div>\n}","import \"./input-button.css\";\n\nimport { useState, useRef } from \"react\";\n\n\nexport function InputTextButton({ children, onValue }) {\n    const [visible, setVisible] = useState(false);\n    const [value, setValue] = useState(\"\");\n    const inputRef = useRef();\n    const onConfirm = () => {\n        if (value) {\n          onValue(value);\n        }\n        setVisible(false);\n        setValue(\"\");\n        inputRef.current?.blur();\n    }\n    return <div className={`input-button ${visible ? \"input-button--visible\": \"\"}`}>\n      <input \n        ref={inputRef}\n        value={value}\n        onChange={({target}) => setValue(target.value)}\n        onBlur={onConfirm}\n        onKeyPress={({ charCode }) => {\n          if (charCode === 13) {\n            onConfirm()\n          }\n        }}\n        placeholder=\"HC1:6BFOXN+TSMAHN-HO.PG:MCU62$\"\n      />\n      <button onClick={() => {\n        if (!visible && inputRef.current) {\n          inputRef.current.focus();\n          setVisible(true);\n        }\n      }}>{children}</button>\n    </div>\n}\n\nexport function InputFileButton({ children, onValue }) {\n  const inputRef = useRef();\n\n  return <div className=\"input-button\">\n    <input \n      className=\"upload-file-button\"\n      type=\"file\" \n      ref={inputRef}\n      onChange={e => {\n        const file = inputRef.current.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (evt) {\n              onValue(reader.result);\n            }\n            reader.onerror = console.error;\n        }\n      }}\n    />\n    <button onClick={() => {\n      inputRef.current?.click();\n    }}>{children}</button>\n  </div>\n}","import './reset.css';\nimport './main.css';\nimport { useState } from \"react\";\nimport { useQrScanner } from './use-qr-scanner';\nimport { Result } from \"./result\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaste, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { InputTextButton, InputFileButton } from './input-button';\nimport { BrowserQRCodeReader } from '@zxing/browser';\n\n\nfunction App() {\n  const [showMore, setShowMore] = useState(false);\n  const [data, setData] = useState(null);\n  const { previewRef } = useQrScanner({ onData: setData });\n  return (\n    <div className=\"app\">\n\n      <header>\n        <section className=\"bar\">\n          <h1>Covid Pass Scanner</h1>\n          <p>Hold code in middle of viewport.{\" \"}\n            <button onClick={() => setShowMore(!showMore)}>Learn more...</button>\n          </p>\n          <p className={`show-more ${showMore ? \"show-more--expanded\" : \"\"}`}>\n            This app acts as a QR code scanner for EU vaccination passports \n            and displays the results below. You can use this to verify the \n            validity of a given vaccine passport. \n          </p>\n        </section>\n\n        <section className=\"actions\">\n          <InputTextButton onValue={setData}>\n            <FontAwesomeIcon icon={faPaste} title=\"Open text input\"/>\n          </InputTextButton>\n          <InputFileButton\n            onValue={url => void\n              new BrowserQRCodeReader()\n                .decodeFromImageUrl(url)\n                .then(d => setData(d?.text))\n            }\n          >\n            <FontAwesomeIcon icon={faUpload} title=\"Upload image\" />\n          </InputFileButton>\n        </section>\n      </header>\n\n      \n\n      <Result data={data} />\n\n      <div className=\"viewport\">\n        <video ref={previewRef} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport { BrowserQRCodeReader } from '@zxing/browser';\n\nexport const useQrScanner = ({\n  onError = console.error,\n  onData\n} = {}) => {\n  const [previewElement, setPreviewElement] = useState(null);\n\n  useEffect(() => {\n    if (!previewElement) {\n      return \n    }\n    try {\n      let reader = undefined;\n      new BrowserQRCodeReader().decodeFromConstraints({ video: { facingMode: \"environment\" } }, previewElement, (result, error, controls) => {\n        if (result) {\n          onData(result.text);\n        }\n      }).then(r => reader = r)\n      return () => reader?.stop();\n    } catch (error) {\n      onError(error);\n    }\n  }, [previewElement, onError, onData]);\n\n  return { previewRef: setPreviewElement };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}