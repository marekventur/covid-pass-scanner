{"version":3,"sources":["result.js","App.js","use-qr-scanner.js","reportWebVitals.js","index.js"],"names":["getPropertiesByRef","ref","dccSchema","split","properties","toJson","data","result","forEach","value","key","Array","map","Map","makeHumanReadable","schema","keySchema","title","description","items","e","parseData","stringData","slice","base45decodedData","base45","decode","uncompressedData","pako","inflate","tags","payload","decodedPayload","useMaps","schemaData","get","code","issuer","expiry","Date","generated","humanReadable","console","error","Result","parsedData","useMemo","hasChanged","duration","lastData","useRef","useState","setHasChanged","asJson","JSON","stringify","log","useEffect","current","id","setTimeout","clearTimeout","useChangeDetection","className","Error","ResultData","showDetails","setShowDetails","currentDose","v","dn","totalDoses","sd","administeredTimestamp","dt","daysAgo","Math","floor","now","isValid","isFullyProtected","onClick","nam","gn","fn","dob","toISOString","ResultError","App","showMore","setShowMore","setData","instance","React","scanner","Html5Qrcode","start","facingMode","formatsToSupport","catch","stop","useQrScanner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6905f4bd.chunk.js","sourcesContent":["import { useMemo, useState, useRef, useEffect } from \"react\";\nimport base45 from \"base45\";\nimport pako from \"pako\";\nimport { decode } from \"cborg\";\nimport dccSchema from \"./dcc-schema.json\";\n\nconst getPropertiesByRef = ref => \n  dccSchema[\"$defs\"][ref.split(\"/\")[2]].properties;\n\nconst toJson = data => {\n  const result = {};\n  data.forEach((value, key) => {   \n    if (value instanceof Array) {\n      result[key] = value.map(toJson);\n    } else if (value instanceof Map) {\n      result[key] = toJson(value);\n    } else {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nconst makeHumanReadable = (data, schema) => {\n  const result = {};\n  data.forEach((value, key) => {   \n    const keySchema = schema[key];\n    if (!keySchema) {\n      result[key] = value;\n      return;\n    }\n    const title = keySchema.title ?? keySchema.description;\n    if (value instanceof Array) {\n      const properties = getPropertiesByRef(keySchema.items[\"$ref\"]);\n      result[title] = value.map(e => makeHumanReadable(e, properties))\n    } else if (value instanceof Map) {\n      result[title] = makeHumanReadable(value, getPropertiesByRef(keySchema[\"$ref\"]));\n    } else {\n      result[title] = value;\n    } \n  });\n  return result;\n}\n\nconst useChangeDetection = (data, duration) => {\n  const lastData = useRef(null);\n  const [hasChanged, setHasChanged] = useState(false);\n  const asJson = JSON.stringify(data);\n  console.log(asJson);\n\n  useEffect(() => {\n    console.log(asJson, lastData);\n    if (asJson !== lastData.current) {\n      lastData.current = asJson;\n      setHasChanged(true);\n      const id = setTimeout(() => setHasChanged(false), duration);\n      return () => clearTimeout(id);\n    }\n    return () => {}\n  }, [asJson, duration])\n  \n  return hasChanged;\n}\n\nconst parseData = (data) => {\n  \n  if (!data) {\n    return null;\n  }\n  try {\n    const stringData = data.slice(4);\n    const base45decodedData = base45.decode(stringData);\n    const uncompressedData = pako.inflate(base45decodedData);\n\n    const tags = { 18: data => data };\n\n    /* eslint-disable no-unused-vars */\n    const [ headers1, headers2, payload, ignoreSignature ] = decode(uncompressedData, { tags });\n    /* eslint-enable no-unused-vars */\n\n    // todo: verify signature\n    const decodedPayload = decode(payload, {useMaps: true});\n    const schemaData = decodedPayload.get(-260).get(1);\n    return {\n      code: {\n        issuer: decodedPayload.get(1),\n        expiry: new Date(decodedPayload.get(4) * 1000),\n        generated: new Date(decodedPayload.get(6) * 1000),\n      },\n      humanReadable: makeHumanReadable(schemaData, dccSchema.properties),\n      data: toJson(schemaData),\n    }\n  } catch (e) {\n    console.error(e);\n    return e;\n  }\n}\n\nexport const Result = ({\n  data\n}) => {\n  const parsedData = useMemo(() => parseData(data), [data]);\n  const hasChanged = useChangeDetection(parsedData?.data, 1000);\n  if (!parsedData) {\n    return null;\n  }\n  \n  return <div className={`result ${hasChanged ? \"result--has-changed\" : \"\"}`}>\n    {(parseData instanceof Error) \n      ? <ResultError error={parsedData} />\n      : <ResultData {...parsedData} />\n    }\n  </div>\n}\n\nconst ResultData = ({ data, humanReadable, code }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const currentDose = data.v?.[0]?.dn;\n  const totalDoses = data.v?.[0]?.sd;\n  const administeredTimestamp = new Date(data.v?.[0]?.dt);\n  const daysAgo = Math.floor((Date.now() - administeredTimestamp) / 1000 / 60 / 60 / 24);\n  const isValid = Date.now() < code.expiry;\n  const isFullyProtected = currentDose === totalDoses && daysAgo > 14;\n  return <>\n    <button className=\"show-details\" onClick={() => setShowDetails(!showDetails)}>{showDetails ? \"Less details\" : \"More details\"}</button>\n    {!showDetails && <dl>\n      <dt>Name</dt>\n      <dd>{data.nam?.gn} {data.nam?.fn}</dd>\n\n      <dt>DoB</dt>\n      <dd>{data.dob}</dd>\n\n      <dt>Vaccine</dt>\n      <dd className={isFullyProtected ? \"key--ok\": \"key--bad\"}>{currentDose} / {totalDoses} ({daysAgo} days ago)</dd>\n\n      <dt>Country</dt>\n      <dd>{code.issuer}</dd>\n\n      <dt>Code expiration</dt>\n      <dd className={isValid ? \"key--ok\": \"key--bad\"}>{code.expiry.toISOString().slice(0, 10)}</dd>\n    </dl>}\n    {showDetails && <pre className=\"details\">\n      {JSON.stringify(humanReadable, null, 2)}\n    </pre>}\n  </>\n}\n\nconst ResultError = () => {\n  return <div className=\"error\">Invalid vaccination code</div>\n}","import './reset.css';\nimport './main.css';\nimport { useState } from \"react\";\nimport { useQrScanner } from './use-qr-scanner';\nimport { Result } from \"./result\";\n\nfunction App() {\n  const [showMore, setShowMore] = useState(false);\n  const { data } = useQrScanner({ id: \"viewport-scanner\" });\n  return (\n    <div className=\"app\">\n\n      <header>\n        <h1>Covid Pass Scanner</h1>\n        <p>Hold code in middle of viewport.{\" \"}\n          <button onClick={() => setShowMore(!showMore)}>Learn more...</button>\n        </p>\n        <p className={`show-more ${showMore ? \"show-more--expanded\" : \"\"}`}>\n          This app acts as a QR code scanner for EU vaccination passports \n          and displays the results below. You can use this to verify the \n          validity of a given vaccine passport. \n        </p>\n      </header>\n\n      <Result data={data} />\n\n      <div className=\"viewport\">\n        <div id=\"viewport-scanner\" />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\n\nexport function useQrScanner({\n    id\n  }) {\n    const [data, setData] = useState(null);\n    const instance = React.useRef(null);\n  \n    useEffect(() => {\n      try {\n        setData(null);\n        // eslint-disable-next-line\n        const scanner = new Html5Qrcode(id);\n        instance.current = scanner;\n        scanner\n          .start(\n            { facingMode: \"environment\" },\n            { formatsToSupport: [ /*Html5QrcodeSupportedFormats.QR_CODE*/ 0 ] },\n            data => {\n              setData(data)\n            },\n            error => { /* this happens if no code is found */ }\n          )\n          .catch(console.error);\n\n          // unmount\n          return () => scanner.stop();\n      } catch (error) {\n        console.error(error)\n      }\n    }, [id]);\n  \n    return { data };\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}