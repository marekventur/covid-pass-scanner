{"version":3,"sources":["result.js","input-button.js","App.js","use-qr-scanner.js","reportWebVitals.js","index.js"],"names":["getPropertiesByRef","ref","dccSchema","split","properties","toJson","data","result","forEach","value","key","Array","map","Map","VALUE_LOOKUP","makeHumanReadable","schema","keySchema","title","description","items","e","Result","parsedData","useMemo","stringData","slice","base45decodedData","base45","decode","uncompressedData","pako","inflate","tags","useMaps","payload","decodedPayload","schemaData","get","code","issuer","expiry","Date","generated","humanReadable","console","error","Error","parseData","hasChanged","duration","lastData","useRef","useState","setHasChanged","asJson","JSON","stringify","useEffect","current","id","setTimeout","clearTimeout","useChangeDetection","className","ResultData","showDetails","setShowDetails","isValid","now","log","onClick","icon","faMinusCircle","faPlusCircle","nam","gn","fn","dob","vaccine","v","recovery","r","test","t","toISOString","ResultVaccineData","currentDose","dn","totalDoses","sd","administeredTimestamp","dt","daysAgo","Math","floor","isFullyProtected","manufacturer","ma","product","mp","ResultRecoveryData","valid","df","du","ResultTestData","testTime","sc","testPositive","tr","hoursAgo","ResultError","InputTextButton","children","onValue","visible","setVisible","setValue","inputRef","onConfirm","blur","onChange","target","onBlur","onKeyPress","charCode","placeholder","focus","InputFileButton","type","file","files","reader","FileReader","readAsDataURL","onload","evt","onerror","click","App","showMore","setShowMore","setData","previewRef","onError","onData","previewElement","setPreviewElement","undefined","BrowserQRCodeReader","decodeFromConstraints","video","facingMode","controls","text","then","stop","useQrScanner","faInfoCircle","faPaste","url","decodeFromImageUrl","d","faUpload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b28ba3a.chunk.js","sourcesContent":["import { useMemo, useState, useRef, useEffect } from \"react\";\nimport base45 from \"base45\";\nimport pako from \"pako\";\nimport { decode } from \"cborg\";\nimport dccSchema from \"./dcc-schema.json\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\n\nconst getPropertiesByRef = ref => \n  dccSchema[\"$defs\"][ref.split(\"/\")[2]].properties;\n\nconst toJson = data => {\n  const result = {};\n  data.forEach((value, key) => {   \n    if (value instanceof Array) {\n      result[key] = value.map(toJson);\n    } else if (value instanceof Map) {\n      result[key] = toJson(value);\n    } else {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\n// source: https://ec.europa.eu/health/sites/default/files/ehealth/docs/digital-green-value-sets_en.pdf\nconst VALUE_LOOKUP = {\n  // Diseas\n  \"840539006\": \"COVID-19\",\n\n  // Tests\n  \"LP6464-4\": \"Nucleic acid amplification with probe detection\",\n  \"LP217198-3\": \"Rapid immunoassay\",\n\n  // Vaccine/prophylaxis\n  \"1119305005\": \"SARS-CoV-2 antigen vaccine\",\n  \"1119349007\": \"SARS-CoV-2 mRNA vaccine\",\n  \"J07BX03\": \"covid-19 vaccines\",\n\n  // Vaccine medicinal product\n  \"EU/1/20/1528\": \"Comirnaty\",\n  \"EU/1/20/1507\": \"Spikevax (previously COVID-19 Vaccine Moderna)\",\n  \"EU/1/21/1529\": \"Vaxzevria\",\n  \"EU/1/20/1525\": \"COVID-19 Vaccine Janssen\",\n\n  // Vaccine manufacturer\n  \"ORG-100001699\": \"AstraZeneca AB\",\n  \"ORG-100030215\": \"Biontech Manufacturing GmbH\",\n  \"ORG-100001417\": \"Janssen-Cilag International\",\n  \"ORG-100031184\": \"Moderna Biotech Spain S.L.\",\n  \"ORG-100006270\": \"Curevac AG\",\n  \"ORG-100013793\": \"CanSino Biologics\",\n  \"ORG-100020693\": \"China Sinopharm International Corp. - Beijing location\",\n  \"ORG-100010771\": \"Sinopharm Weiqida Europe Pharmaceutical s.r.o. - Prague location\",\n  \"ORG-100024420\": \"Sinopharm Zhijun (Shenzhen) Pharmaceutical Co. Ltd. -Shenzhen location\",\n  \"ORG-100032020\": \"Novavax CZ AS\",\n  \"ORG-100001981\": \"Serum Institute Of India Private Limited\"\n}\n\nconst makeHumanReadable = (data, schema) => {\n  const result = {};\n  data.forEach((value, key) => {   \n    const keySchema = schema[key];\n    if (!keySchema) {\n      result[key] = value;\n      return;\n    }\n    const title = keySchema.title ?? keySchema.description;\n    if (value instanceof Array) {\n      const properties = getPropertiesByRef(keySchema.items[\"$ref\"]);\n      result[title] = value.map(e => makeHumanReadable(e, properties))\n    } else if (value instanceof Map) {\n      result[title] = makeHumanReadable(value, getPropertiesByRef(keySchema[\"$ref\"]));\n    } else {\n      result[title] = VALUE_LOOKUP[value] ?? value;\n    } \n  });\n  return result;\n}\n\nconst useChangeDetection = (data, duration) => {\n  const lastData = useRef(null);\n  const [hasChanged, setHasChanged] = useState(false);\n  const asJson = JSON.stringify(data);\n\n  useEffect(() => {\n    if (asJson !== lastData.current) {\n      lastData.current = asJson;\n      setHasChanged(true);\n      const id = setTimeout(() => setHasChanged(false), duration);\n      return () => clearTimeout(id);\n    }\n    return () => {}\n  }, [asJson, duration])\n  \n  return hasChanged;\n}\n\nconst parseData = (data) => {\n  \n  if (!data) {\n    return null;\n  }\n  try {\n    const stringData = data.slice(4);\n    const base45decodedData = base45.decode(stringData);\n    const uncompressedData = pako.inflate(base45decodedData);\n    \n    const tags = { 18: data => data };\n\n    /* eslint-disable no-unused-vars */\n    const [ headers1, headers2, payload, ignoreSignature ] = decode(uncompressedData, { tags, useMaps: true });\n    /* eslint-enable no-unused-vars */\n\n    // todo: verify signature\n    const decodedPayload = decode(payload, {useMaps: true});\n    const schemaData = decodedPayload.get(-260).get(1);\n    return {\n      code: {\n        issuer: decodedPayload.get(1),\n        expiry: new Date(decodedPayload.get(4) * 1000),\n        generated: new Date(decodedPayload.get(6) * 1000),\n      },\n      humanReadable: makeHumanReadable(schemaData, dccSchema.properties),\n      data: toJson(schemaData),\n    }\n  } catch (e) {\n    console.error(e);\n    return new Error(e);\n  }\n}\n\nexport const Result = ({\n  data\n}) => {\n  const parsedData = useMemo(() => parseData(data), [data]);\n  const hasChanged = useChangeDetection(parsedData?.data, 1000);\n  if (!parsedData) {\n    return null;\n  }\n  \n  return <div className={`result ${hasChanged ? \"result--has-changed\" : \"\"}`}>\n    {(parsedData instanceof Error) \n      ? <ResultError error={parsedData} />\n      : <ResultData {...parsedData} />\n    }\n  </div>\n}\n\nconst ResultData = ({ data, humanReadable, code }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const isValid = Date.now() < code.expiry;\n  console.log(data);\n  \n  return <>\n    <button className=\"show-details\" onClick={() => setShowDetails(!showDetails)}>\n      {showDetails \n        ? <FontAwesomeIcon icon={faMinusCircle} title=\"Less details\"/>\n        : <FontAwesomeIcon icon={faPlusCircle} title=\"More details\"/>\n      }\n    </button>\n    {!showDetails && <dl>\n      <dt>Name</dt>\n      <dd>{data.nam?.gn} {data.nam?.fn}</dd>\n\n      <dt>DoB</dt>\n      <dd>{data.dob}</dd>\n\n      <ResultVaccineData vaccine={data.v?.[0]} />\n      <ResultRecoveryData recovery={data.r?.[0]} />\n      <ResultTestData test={data.t?.[0]} />\n\n      <dt>Country</dt>\n      <dd>{code.issuer}</dd>\n\n      <dt>Code expiration</dt>\n      <dd className={isValid ? \"key--ok\": \"key--bad\"}>{code.expiry.toISOString().slice(0, 10)}</dd>\n    </dl>}\n    {showDetails && <pre className=\"details\">\n      {JSON.stringify(humanReadable, null, 2)}\n    </pre>}\n  </>\n}\n\nconst ResultVaccineData = ({vaccine}) => {\n  if (!vaccine) {\n    return null;\n  }\n  const currentDose = vaccine.dn;\n  const totalDoses = vaccine.sd;\n  const administeredTimestamp = new Date(vaccine.dt);\n  const daysAgo = Math.floor((Date.now() - administeredTimestamp) / 1000 / 60 / 60 / 24);\n  const isFullyProtected = currentDose === totalDoses && daysAgo > 14;\n  const manufacturer = VALUE_LOOKUP[vaccine.ma] ?? vaccine.ma;\n  const product = VALUE_LOOKUP[vaccine.mp] ?? vaccine.mp;\n\n  return <>\n    <dt>Vaccine</dt>\n    <dd>{manufacturer} / {product}</dd>\n\n    <dt>Dose and time</dt>\n    <dd className={isFullyProtected ? \"key--ok\": \"key--bad\"}>\n      {currentDose} / {totalDoses} ({daysAgo} days ago)\n    </dd>\n  </>\n}\n\nconst ResultRecoveryData = ({recovery}) => {\n  if (!recovery) {\n    return null;\n  }\n  const valid = new Date(recovery.df) < Date.now() && new Date(recovery.du) > Date.now()\n\n  return <>\n    <dt>Recovery</dt>\n    <dd className={valid ? \"key--ok\": \"key--bad\"}>\n      Certified from {recovery.df} to {recovery.du}\n    </dd>\n  </>\n}\n\nconst ResultTestData = ({test}) => {\n  if (!test) {\n    return null;\n  }\n\n  const testTime = new Date(test.sc);\n  const testPositive = test.tr !== \"260415000\";\n  const hoursAgo = Math.floor((Date.now() - testTime) / 1000 / 60 / 60);\n  const valid = hoursAgo < 72 || !testPositive;\n\n  return <>\n    <dt>Test</dt>\n    <dd className={valid ? \"key--ok\": \"key--bad\"}>\n      {testTime.toISOString().slice(0, 10)} {testTime.toISOString().slice(11, 16)} UTC ({hoursAgo} hours ago) \n      - {testPositive ? \"POSITIVE\" : \"negative\"}\n    </dd>\n  </>\n}\n\nconst ResultError = () => {\n  return <div className=\"error\">Invalid code</div>\n}","import \"./input-button.css\";\n\nimport { useState, useRef } from \"react\";\n\n\nexport function InputTextButton({ children, onValue }) {\n    const [visible, setVisible] = useState(false);\n    const [value, setValue] = useState(\"\");\n    const inputRef = useRef();\n    const onConfirm = () => {\n        if (value) {\n          onValue(value);\n        }\n        setVisible(false);\n        setValue(\"\");\n        inputRef.current?.blur();\n    }\n    return <div className={`input-button ${visible ? \"input-button--visible\": \"\"}`}>\n      <input \n        ref={inputRef}\n        value={value}\n        onChange={({target}) => setValue(target.value)}\n        onBlur={onConfirm}\n        onKeyPress={({ charCode }) => {\n          if (charCode === 13) {\n            onConfirm()\n          }\n        }}\n        placeholder=\"HC1:6BFOXN+TSMAHN-HO.PG:MCU62$\"\n      />\n      <button onClick={() => {\n        if (!visible && inputRef.current) {\n          inputRef.current.focus();\n          setVisible(true);\n        }\n      }}>{children}</button>\n    </div>\n}\n\nexport function InputFileButton({ children, onValue }) {\n  const inputRef = useRef();\n\n  return <div className=\"input-button\">\n    <input \n      className=\"upload-file-button\"\n      type=\"file\" \n      ref={inputRef}\n      onChange={e => {\n        const file = inputRef.current.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (evt) {\n              onValue(reader.result);\n            }\n            reader.onerror = console.error;\n        }\n      }}\n    />\n    <button onClick={() => {\n      inputRef.current?.click();\n    }}>{children}</button>\n  </div>\n}","import './reset.css';\nimport './main.css';\nimport { useState } from \"react\";\nimport { useQrScanner } from './use-qr-scanner';\nimport { Result } from \"./result\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaste, faUpload, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { InputTextButton, InputFileButton } from './input-button';\nimport { BrowserQRCodeReader } from '@zxing/browser';\n\n\nfunction App() {\n  const [showMore, setShowMore] = useState(false);\n  const [data, setData] = useState(null);\n  const { previewRef } = useQrScanner({ onData: setData });\n  return (\n    <div className=\"app\">\n\n      <header>\n        <section className=\"bar\">\n          <h1>Covid Pass Scanner</h1>\n          <button \n            className=\"more-info\"\n            onClick={() => setShowMore(!showMore)}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} title=\"Open text input\"/>\n          </button>\n          \n          <p className={`show-more ${showMore ? \"show-more--expanded\" : \"\"}`}>\n            This app acts as a QR code scanner for EU vaccination passports \n            and displays the results below. You can use this to verify the \n            validity of a given vaccine passport. \n          </p>\n        </section>\n\n        <section className=\"actions\">\n          <InputTextButton onValue={setData}>\n            <FontAwesomeIcon icon={faPaste} title=\"Open text input\"/>\n          </InputTextButton>\n          <InputFileButton\n            onValue={url => void\n              new BrowserQRCodeReader()\n                .decodeFromImageUrl(url)\n                .then(d => setData(d?.text))\n            }\n          >\n            <FontAwesomeIcon icon={faUpload} title=\"Upload image\" />\n          </InputFileButton>\n        </section>\n      </header>\n\n      \n\n      <Result data={data} />\n\n      <div className=\"viewport\">\n        <video ref={previewRef} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport { BrowserQRCodeReader } from '@zxing/browser';\n\nexport const useQrScanner = ({\n  onError = console.error,\n  onData\n} = {}) => {\n  const [previewElement, setPreviewElement] = useState(null);\n\n  useEffect(() => {\n    if (!previewElement) {\n      return \n    }\n    try {\n      let reader = undefined;\n      new BrowserQRCodeReader().decodeFromConstraints({ video: { facingMode: \"environment\" } }, previewElement, (result, error, controls) => {\n        if (result) {\n          onData(result.text);\n        }\n      }).then(r => reader = r)\n      return () => reader?.stop();\n    } catch (error) {\n      onError(error);\n    }\n  }, [previewElement, onError, onData]);\n\n  return { previewRef: setPreviewElement };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}